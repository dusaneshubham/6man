.glowingWrapper {
    position: relative;
    display: inline-block;
    pointer-events: all;
    overflow: hidden;
    border-radius: 62.5rem
}

.glowingWrapper {
    margin-right: 40px;
    padding: 0 30px;
}

@media(max-width: 575px) {
    .glowingWrapper {
        margin-right: 20px !important;
    }

    .buttonText {
        font-size: 12px !important;
    }
}

.glowingWrapperAnimations {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 100%;
    opacity: 0;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    -webkit-transition: opacity 1s;
    transition: opacity 1s
}

.glowingWrapperGlow {
    opacity: .12;
    -webkit-filter: blur(8px);
    filter: blur(8px)
}

.glowingWrapperMask,
.glowingWrapperMaskWrapper {
    opacity: 1
}

.glowingWrapperBordersMasker {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    padding: .06rem;
    border-radius: 62.5rem;
    opacity: 0;
    -webkit-transition: opacity 1s;
    transition: opacity 1s;
    line-height: 100%
}

.glowingWrapperBorders {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 100%;
    opacity: 1;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%)
}

.glowingWrapperButton {
    position: relative;
    z-index: 1;
    padding: 0.7rem 1.6rem;
    border-radius: 62.5rem;
    color: #fff;
    line-height: 1.42;
    text-decoration: none
}

.buttonText {
    position: relative;
    z-index: 2;
    color: #fff;
    font-size: 14px;
    text-transform: uppercase;
    font-weight: 500;
    letter-spacing: .56px;
}

.styles---glowing-button {
    display: none
}

.glowingWrapperButton:after {
    background: radial-gradient(85% 120% at 50% 120%, rgba(255, 255, 255, .24) 0%, rgba(255, 255, 255, 0) 100%);
    border-radius: 999px;
    content: "";
    height: calc(100% + 4px);
    left: -2px;
    opacity: 0;
    position: absolute;
    top: -2px;
    transition: 1s all;
    width: calc(100% + 4px)
}

.glowingWrapperButton:hover:after {
    opacity: .7
}


.glowingWrapperActive .glowingWrapperAnimations,
.glowingWrapperActive .glowingWrapperBordersMasker {
    opacity: 1
}

.glowingWrapperAnimations:before,
.glowingWrapperBorders:before {
    content: "";
    float: left;
    padding-top: 100%
}

.glowingWrapperAnimations:after,
.glowingWrapperBorders:after {
    clear: both;
    content: "";
    display: block
}

.glowingWrapperAnimations {
    pointer-events: none;
}

.glowingWrapperAnimations * {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%
}

.glowingWrapperBorders,
.glowingWrapperGlow,
.glowingWrapperMask {
    animation: borderTurn 2.5s infinite linear;
    background-image: conic-gradient(from 0 at 50% 50%, rgba(255, 255, 255, .5) 0deg, rgba(255, 255, 255, 0) 60deg, rgba(255, 255, 255, 0) 310deg, rgba(255, 255, 255, .5) 360deg);
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover
}

.glowingWrapperMaskWrapper {
    -webkit-mask: url("data:image/svg+xml,url('data:image/svg+xml,%253Csvg width='28' height='24' viewBox='0 0 28 24' fill='none' xmlns='http://www.w3.org/2000/svg'%253E%253Crect width='28' height='24' fill='black'/%253E%253C/svg%253E%250A');");
    mask: url("data:image/svg+xml,url('data:image/svg+xml,%253Csvg width='28' height='24' viewBox='0 0 28 24' fill='none' xmlns='http://www.w3.org/2000/svg'%253E%253Crect width='28' height='24' fill='black'/%253E%253C/svg%253E%250A');");
    mask-repeat: repeat;
    -webkit-mask-size: auto;
    mask-size: auto
}

.glowingWrapperBorders {
    animation-name: borderTurnWithTranslate
}

.glowingWrapperBordersMasker {
    content: "";
    inset: 0;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
}

@keyframes borderTurn {
    0% {
        transform: rotate(0)
    }

    to {
        transform: rotate(360deg)
    }
}

@keyframes borderTurnWithTranslate {
    0% {
        transform: translate(-50%, -50%) rotate(0)
    }

    to {
        transform: translate(-50%, -50%) rotate(360deg)
    }
}